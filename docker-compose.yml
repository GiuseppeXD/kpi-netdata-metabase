version: '3.8'

services:
  netdata-graphql-proxy:
    build:
      context: ./netdata-proxy-graphql
      dockerfile: Dockerfile
    container_name: netdata-graphql-proxy
    restart: unless-stopped
    ports:
      - "8090:8090"
      - "8091:8091"
      - "8092:8092"
    env_file:
      - .env
    environment:
      GRAPHQL_ENDPOINT: ${GRAPHQL_ENDPOINT:-https://digitalize.oxeanbits.com/graphql}
      SHEET_ID: ${SHEET_ID:-68bf175e85d08f78bf97b15f}
      PORT: ${PORT:-8090}
      GRAPHQL_BATCH_SIZE: ${GRAPHQL_BATCH_SIZE:-20}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8090/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - netdata-export

  netdata-forwarder:
    image: python:3.11-slim
    container_name: netdata-forwarder
    restart: unless-stopped
    depends_on:
      netdata-graphql-proxy:
        condition: service_healthy
    working_dir: /app
    command: >
      sh -c "pip install --no-cache-dir requests && python netdata-forwarder.py"
    volumes:
      - ./netdata-forwarder.py:/app/netdata-forwarder.py:ro
    environment:
      NETDATA_URL: ${NETDATA_URL:-http://host.docker.internal:19999}
      GRAPHQL_PROXY_URL: ${GRAPHQL_PROXY_URL:-http://netdata-graphql-proxy:8090}
      CHARTS: ${CHARTS:-system.cpu,disk_space./}
      AGGREGATION_TYPES: ${AGGREGATION_TYPES:-average,median,max}
      NETDATA_HOSTS: ${NETDATA_HOSTS:-}
      INTERVAL_SECONDS: ${INTERVAL_SECONDS:-120}
      REQUEST_TIMEOUT: ${REQUEST_TIMEOUT:-120}
      LOG_LEVEL: ${FORWARDER_LOG_LEVEL:-INFO}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - netdata-export

networks:
  netdata-export:
    driver: bridge
